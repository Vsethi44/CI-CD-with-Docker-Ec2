name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Build Backend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-app ./backend

    - name: Build Frontend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-app ./frontend

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Backend Docker Image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/backend-app

    - name: Push Frontend Docker Image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend-app

     # Add a step to set up the SSH key
    - name: Set up SSH key and known hosts
      run: |
        # Debug: Print HOME variable to ensure it's resolved
        echo "HOME directory: $HOME"

        # Create the .ssh directory and set up the SSH private key
        mkdir -p $HOME/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > $HOME/.ssh/my-keypair.pem
        chmod 600 $HOME/.ssh/my-keypair.pem

        # Check permissions of the private key file
        echo "Checking private key permissions"
        ls -l $HOME/.ssh/my-keypair.pem

        # Skip adding EC2 host to known_hosts temporarily (for testing)
        echo "Skipping EC2 host verification temporarily"
    
        # Test SSH connection (without host verification) to ensure SSH works
        ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/my-keypair.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH Success!'"

        # If SSH connection works, we can proceed further and add host to known_hosts later.



    - name: Add EC2 to known hosts
      run: | 
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to AWS EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i ~/.ssh/my-keypair.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
        docker stop backend-app || true && docker rm backend-app || true
        docker stop frontend-app || true && docker rm frontend-app || true
        docker run -d -p 5000:5000 --name backend-app ${{ secrets.DOCKER_USERNAME }}/backend-app
        docker run -d -p 80:80 --name frontend-app ${{ secrets.DOCKER_USERNAME }}/frontend-app
        EOF

